{"version":3,"names":["ScrollViewMemo","React","memo","forwardRef","props","passRef","ScrollView","contentContainerStyle","style","onContentSizeChange","children","refreshControl","rest","name","ref","setRef","contentInset","_style","_contentContainerStyle","progressViewOffset","scrollHandler","enable","useEffect","scrollContentSizeChange","scrollContentSizeChangeHandlers","useMemo","memoRefreshControl","cloneElement","contentInsetValue","memoContentInset","top","memoContentOffset","x","y","memoContentContainerStyle","memoStyle"],"sources":["ScrollView.tsx"],"sourcesContent":["import React from 'react'\nimport { ScrollViewProps, ScrollView as RNScrollView } from 'react-native'\nimport Animated from 'react-native-reanimated'\n\nimport {\n  useAfterMountEffect,\n  useChainCallback,\n  useCollapsibleStyle,\n  useConvertAnimatedToValue,\n  useScrollHandlerY,\n  useSharedAnimatedRef,\n  useTabNameContext,\n  useTabsContext,\n  useUpdateScrollViewContentSize,\n} from './hooks'\n\n/**\n * Used as a memo to prevent rerendering too often when the context changes.\n * See: https://github.com/facebook/react/issues/15156#issuecomment-474590693\n */\nconst ScrollViewMemo = React.memo(\n  React.forwardRef<RNScrollView, React.PropsWithChildren<ScrollViewProps>>(\n    (props, passRef) => {\n      return (\n        <Animated.ScrollView\n          // @ts-expect-error reanimated types are broken on ref\n          ref={passRef}\n          {...props}\n        />\n      )\n    }\n  )\n)\n\n/**\n * Use like a regular ScrollView.\n */\nexport const ScrollView = React.forwardRef<\n  RNScrollView,\n  React.PropsWithChildren<Omit<ScrollViewProps, 'onScroll'>>\n>(\n  (\n    {\n      contentContainerStyle,\n      style,\n      onContentSizeChange,\n      children,\n      refreshControl,\n      ...rest\n    },\n    passRef\n  ) => {\n    const name = useTabNameContext()\n    const ref = useSharedAnimatedRef<RNScrollView>(passRef)\n    const { setRef, contentInset } = useTabsContext()\n    const {\n      style: _style,\n      contentContainerStyle: _contentContainerStyle,\n      progressViewOffset,\n    } = useCollapsibleStyle()\n    const { scrollHandler, enable } = useScrollHandlerY(name)\n    useAfterMountEffect(() => {\n      // we enable the scroll event after mounting\n      // otherwise we get an `onScroll` call with the initial scroll position which can break things\n      enable(true)\n    })\n\n    React.useEffect(() => {\n      setRef(name, ref)\n    }, [name, ref, setRef])\n\n    const scrollContentSizeChange = useUpdateScrollViewContentSize({\n      name,\n    })\n\n    const scrollContentSizeChangeHandlers = useChainCallback(\n      React.useMemo(() => [scrollContentSizeChange, onContentSizeChange], [\n        onContentSizeChange,\n        scrollContentSizeChange,\n      ])\n    )\n\n    const memoRefreshControl = React.useMemo(\n      () =>\n        refreshControl &&\n        React.cloneElement(refreshControl, {\n          progressViewOffset,\n          ...refreshControl.props,\n        }),\n      [progressViewOffset, refreshControl]\n    )\n\n    const contentInsetValue = useConvertAnimatedToValue(contentInset)\n\n    const memoContentInset = React.useMemo(() => ({ top: contentInsetValue }), [\n      contentInsetValue,\n    ])\n\n    const memoContentOffset = React.useMemo(\n      () => ({ x: 0, y: -contentInsetValue }),\n      [contentInsetValue]\n    )\n\n    const memoContentContainerStyle = React.useMemo(\n      () => [\n        _contentContainerStyle,\n        // TODO: investigate types\n        contentContainerStyle as any,\n      ],\n      [_contentContainerStyle, contentContainerStyle]\n    )\n    const memoStyle = React.useMemo(() => [_style, style], [_style, style])\n\n    return (\n      <ScrollViewMemo\n        {...rest}\n        ref={ref}\n        bouncesZoom={false}\n        style={memoStyle}\n        contentContainerStyle={memoContentContainerStyle}\n        onScroll={scrollHandler}\n        onContentSizeChange={scrollContentSizeChangeHandlers}\n        scrollEventThrottle={16}\n        contentInset={memoContentInset}\n        contentOffset={memoContentOffset}\n        automaticallyAdjustContentInsets={false}\n        refreshControl={memoRefreshControl}\n        // workaround for: https://github.com/software-mansion/react-native-reanimated/issues/2735\n        onMomentumScrollEnd={() => {}}\n      >\n        {children}\n      </ScrollViewMemo>\n    )\n  }\n)\n"],"mappings":"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"}