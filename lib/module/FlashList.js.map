{"version":3,"names":["React","AnimatedFlashList","useAfterMountEffect","useChainCallback","useCollapsibleStyle","useConvertAnimatedToValue","useScrollHandlerY","useSharedAnimatedRef","useTabNameContext","useTabsContext","useUpdateScrollViewContentSize","FlashListMemo","forwardRef","props","passRef","FlashListImpl","contentContainerStyle","style","onContentSizeChange","refreshControl","rest","name","setRef","contentInset","ref","scrollHandler","enable","progressViewOffset","useEffect","scrollContentSizeChange","scrollContentSizeChangeHandlers","memoRefreshControl","cloneElement","contentInsetValue","memoContentInset","top","memoContentOffset","x","y","FlashList"],"sources":["FlashList.tsx"],"sourcesContent":["import { FlashList as SFlashList, FlashListProps } from '@shopify/flash-list'\nimport React from 'react'\n\nimport { AnimatedFlashList } from './helpers'\nimport {\n  useAfterMountEffect,\n  useChainCallback,\n  useCollapsibleStyle,\n  useConvertAnimatedToValue,\n  useScrollHandlerY,\n  useSharedAnimatedRef,\n  useTabNameContext,\n  useTabsContext,\n  useUpdateScrollViewContentSize,\n} from './hooks'\n\n/**\n * Used as a memo to prevent rerendering too often when the context changes.\n * See: https://github.com/facebook/react/issues/15156#issuecomment-474590693\n */\nconst FlashListMemo = React.forwardRef<\n  SFlashList<any>,\n  React.PropsWithChildren<FlashListProps<unknown>>\n>((props, passRef) => {\n  return <AnimatedFlashList ref={passRef} {...props} />\n})\n\nfunction FlashListImpl<R>(\n  {\n    contentContainerStyle,\n    style,\n    onContentSizeChange,\n    refreshControl,\n    ...rest\n  }: Omit<FlashListProps<R>, 'onScroll'>,\n  passRef: React.Ref<SFlashList<any>>\n): React.ReactElement {\n  const name = useTabNameContext()\n  const { setRef, contentInset } = useTabsContext()!\n  const ref = useSharedAnimatedRef<SFlashList<unknown>>(passRef)\n\n  const { scrollHandler, enable } = useScrollHandlerY(name)\n  useAfterMountEffect(() => {\n    // we enable the scroll event after mounting\n    // otherwise we get an `onScroll` call with the initial scroll position which can break things\n    enable(true)\n  })\n\n  const { progressViewOffset } = useCollapsibleStyle()\n\n  React.useEffect(() => {\n    setRef(name, ref)\n  }, [name, ref, setRef])\n\n  const scrollContentSizeChange = useUpdateScrollViewContentSize({\n    name,\n  })\n\n  const scrollContentSizeChangeHandlers = useChainCallback([\n    scrollContentSizeChange,\n    onContentSizeChange,\n  ])\n\n  const memoRefreshControl =\n    refreshControl &&\n    React.cloneElement(refreshControl, {\n      progressViewOffset,\n      ...refreshControl.props,\n    })\n\n  const contentInsetValue = useConvertAnimatedToValue(contentInset)\n\n  const memoContentInset = { top: contentInsetValue }\n\n  const memoContentOffset = { x: 0, y: -contentInsetValue }\n\n  return (\n    // @ts-ignore\n    <FlashListMemo\n      {...rest}\n      ref={ref}\n      bouncesZoom={false}\n      // style={memoStyle}\n      // contentContainerStyle={memoContentContainerStyle}\n      progressViewOffset={progressViewOffset}\n      onScroll={scrollHandler}\n      onContentSizeChange={scrollContentSizeChangeHandlers}\n      scrollEventThrottle={16}\n      contentInset={memoContentInset}\n      contentOffset={memoContentOffset}\n      automaticallyAdjustContentInsets={false}\n      refreshControl={memoRefreshControl}\n      // workaround for: https://github.com/software-mansion/react-native-reanimated/issues/2735\n      onMomentumScrollEnd={() => {}}\n    />\n  )\n}\n\n/**\n * Use like a regular FlashList.\n */\nexport const FlashList = React.forwardRef(FlashListImpl) as <T>(\n  p: FlashListProps<T> & { ref?: React.Ref<SFlashList<T>> }\n) => React.ReactElement\n"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,yBAJF,EAKEC,iBALF,EAMEC,oBANF,EAOEC,iBAPF,EAQEC,cARF,EASEC,8BATF,QAUO,SAVP;AAYA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,gBAAGX,KAAK,CAACY,UAAN,CAGpB,CAACC,KAAD,EAAQC,OAAR,KAAoB;EACpB,oBAAO,oBAAC,iBAAD;IAAmB,GAAG,EAAEA;EAAxB,GAAqCD,KAArC,EAAP;AACD,CALqB,CAAtB;;AAOA,SAASE,aAAT,OAQED,OARF,EASsB;EAAA,IARpB;IACEE,qBADF;IAEEC,KAFF;IAGEC,mBAHF;IAIEC,cAJF;IAKE,GAAGC;EALL,CAQoB;EACpB,MAAMC,IAAI,GAAGb,iBAAiB,EAA9B;EACA,MAAM;IAAEc,MAAF;IAAUC;EAAV,IAA2Bd,cAAc,EAA/C;EACA,MAAMe,GAAG,GAAGjB,oBAAoB,CAAsBO,OAAtB,CAAhC;EAEA,MAAM;IAAEW,aAAF;IAAiBC;EAAjB,IAA4BpB,iBAAiB,CAACe,IAAD,CAAnD;EACAnB,mBAAmB,CAAC,MAAM;IACxB;IACA;IACAwB,MAAM,CAAC,IAAD,CAAN;EACD,CAJkB,CAAnB;EAMA,MAAM;IAAEC;EAAF,IAAyBvB,mBAAmB,EAAlD;EAEAJ,KAAK,CAAC4B,SAAN,CAAgB,MAAM;IACpBN,MAAM,CAACD,IAAD,EAAOG,GAAP,CAAN;EACD,CAFD,EAEG,CAACH,IAAD,EAAOG,GAAP,EAAYF,MAAZ,CAFH;EAIA,MAAMO,uBAAuB,GAAGnB,8BAA8B,CAAC;IAC7DW;EAD6D,CAAD,CAA9D;EAIA,MAAMS,+BAA+B,GAAG3B,gBAAgB,CAAC,CACvD0B,uBADuD,EAEvDX,mBAFuD,CAAD,CAAxD;EAKA,MAAMa,kBAAkB,GACtBZ,cAAc,iBACdnB,KAAK,CAACgC,YAAN,CAAmBb,cAAnB,EAAmC;IACjCQ,kBADiC;IAEjC,GAAGR,cAAc,CAACN;EAFe,CAAnC,CAFF;EAOA,MAAMoB,iBAAiB,GAAG5B,yBAAyB,CAACkB,YAAD,CAAnD;EAEA,MAAMW,gBAAgB,GAAG;IAAEC,GAAG,EAAEF;EAAP,CAAzB;EAEA,MAAMG,iBAAiB,GAAG;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE,CAACL;EAAZ,CAA1B;EAEA;IAAA;IACE;IACA,oBAAC,aAAD,eACMb,IADN;MAEE,GAAG,EAAEI,GAFP;MAGE,WAAW,EAAE,KAHf,CAIE;MACA;MALF;MAME,kBAAkB,EAAEG,kBANtB;MAOE,QAAQ,EAAEF,aAPZ;MAQE,mBAAmB,EAAEK,+BARvB;MASE,mBAAmB,EAAE,EATvB;MAUE,YAAY,EAAEI,gBAVhB;MAWE,aAAa,EAAEE,iBAXjB;MAYE,gCAAgC,EAAE,KAZpC;MAaE,cAAc,EAAEL,kBAblB,CAcE;MAdF;MAeE,mBAAmB,EAAE,MAAM,CAAE;IAf/B;EAFF;AAoBD;AAED;AACA;AACA;;;AACA,OAAO,MAAMQ,SAAS,gBAAGvC,KAAK,CAACY,UAAN,CAAiBG,aAAjB,CAAlB"}